name: Build

on: [pull_request, push]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-2019
            vcpkg_path: C:\mixxx-vcpkg
            vcpkg_bootstrap: .\bootstrap-vcpkg.bat
            vcpkg_triplet: x64-windows
            vcpkg_cache: C:\Users\runneradmin\AppData\Local\vcpkg\archives
            check_disk_space: Get-PSDrive
          - os: macos-10.15
            vcpkg_path: /Users/runner/mixxx-vcpkg
            vcpkg_bootstrap: ./bootstrap-vcpkg.sh
            vcpkg_triplet: x64-osx
            vcpkg_cache: /Users/runner/.cache/vcpkg/archives
            check_disk_space: df -h
    env:
      VCPKG_PACKAGES: >-
        angle
        chromaprint
        ffmpeg
        fftw3
        hidapi
        hss1394
        libebur128
        libflac
        libid3tag
        libkeyfinder
        libmad
        libmodplug
        libogg
        libopusenc
        libshout
        libsndfile
        libusb
        libvorbis
        lilv
        mp3lame
        opus
        opusfile
        portaudio
        portmidi
        protobuf
        pthreads
        qt5-base
        qt5-declarative
        qt5-script
        qt5-svg
        qt5-translations
        qt5-winextras
        qtkeychain
        rubberband
        soundtouch
        taglib
        wavpack
      VCPKG_DEFAULT_TRIPLET: ${{ matrix.vcpkg_triplet }}
      MIXXX_VERSION: 2.3
    name: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    steps:
    - name: Check out git repository
      uses: LebedevRI/checkout@issue197
      with:
        path: ${{ matrix.vcpkg_path }}

    - name: Bootstrap vcpkg
      run: ${{ matrix.vcpkg_bootstrap }}
      working-directory: ${{ matrix.vcpkg_path }}

    - name: "[macOS] Bootstrap vcpkg"
      if: runner.os == 'macOS'
      run: brew install yasm automake

    - name: Set up cache
      uses: actions/cache@v2
      with:
        path: ${{ matrix.vcpkg_cache }}
        key: vcpkg-${{ matrix.vcpkg_triplet }}-${{ github.head_ref }}-${{ github.run_number }}
        restore-keys: |
          vcpkg-${{ matrix.vcpkg_triplet }}-${{ github.head_ref }}
          vcpkg-${{ matrix.vcpkg_triplet }}
          vcpkg

    - name: Check available disk space
      run: ${{ matrix.check_disk_space }}

    - name: Set up NuGet source read + write
      if: env.AZURE_ARTIFACTS_ACCESS_TOKEN != null
      shell: bash
      run: |
        nuget sources add -name azure-artifacts -Source https://pkgs.dev.azure.com/mixxx/vcpkg/_packaging/dependencies/nuget/v3/index.json -Username mixxx -password "$AZURE_ARTIFACTS_ACCESS_TOKEN"
        echo "VCPKG_BINARY_SOURCES=clear;nuget,azure-artifacts,readwrite" >> $GITHUB_ENV
      env:
        AZURE_ARTIFACTS_ACCESS_TOKEN: ${{ secrets.AZURE_ARTIFACTS_ACCESS_TOKEN }}

    - name: Set up NuGet source read only
      if: env.AZURE_ARTIFACTS_ACCESS_TOKEN == null
      shell: bash
      run: |
        nuget sources add -name azure-artifacts -Source https://pkgs.dev.azure.com/mixxx/vcpkg/_packaging/dependencies/nuget/v3/index.json
        echo "VCPKG_BINARY_SOURCES=clear;nuget,azure-artifacts,read;default" >> $GITHUB_ENV
      env:
        AZURE_ARTIFACTS_ACCESS_TOKEN: ${{ secrets.AZURE_ARTIFACTS_ACCESS_TOKEN }}

    - name: Build packages
      run: ./vcpkg install --clean-after-build ${{ env.VCPKG_PACKAGES }}
      working-directory: ${{ matrix.vcpkg_path }}
      env:
        VCPKG_OVERLAY_PORTS: overlay/ports
        VCPKG_BINARY_SOURCES: ${{ env.VCPKG_BINARY_SOURCES }}

    - name: Upload GitHub Actions artifacts of failed build
      if: failure()
      uses: actions/upload-artifact@v2
      with:
        name: logs-${{ matrix.os }}
        path: ${{ matrix.vcpkg_path  }}/buildtrees/**/*.log

    - name: Create buildenv archive
      run: ./vcpkg export ${{ env.VCPKG_PACKAGES }} --zip --output=buildenv-${{ env.MIXXX_VERSION }}-${{ matrix.vcpkg_triplet }}-${{ github.sha }}
      working-directory: ${{ matrix.vcpkg_path }}

    - name: Upload GitHub Actions artifacts
      uses: actions/upload-artifact@v2
      with:
        name: buildenv-${{ env.MIXXX_VERSION }}-${{ matrix.vcpkg_triplet }}-${{ github.sha }}
        path: ${{ matrix.vcpkg_path }}/buildenv-${{ env.MIXXX_VERSION }}-${{ matrix.vcpkg_triplet }}-${{ github.sha }}.zip
